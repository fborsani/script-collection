<?xml version="1.0" encoding="UTF-8"?>
<project name="runScript" default="main">	
	
	<target name="load.params">
		<property file="${user.home}/sonar.properties"/>	
		<property file="${basedir}/SonarQube.properties"/>
		<property file="${output_folder}/WEB-INF/project.properties"/>
		
	    <condition property="odc.exclusion.path.printable" value='${odc.exclusion.path}' else="N/A">
	    	<isset property="odc.exclusion.path"/>	
	    </condition>
		
		<echo>[+] Target: ${output_folder} with version: ${version}</echo>
		<echo>[*] Reading ${basedir}\SonarQube.properties</echo>	
		<echo>[+] Project key: ${project.key}</echo>		
		<echo>[+] Extra args: ${scanner.args}</echo>
		<echo>[*] Reading local file on path ${user.home}\sonar.properties</echo>
		<echo>[+] ODC home: ${odc.scanner.home}</echo>
		<echo>[+] ODC output folder: ${odc.report.out}</echo>
		<echo>[+] ODC exclusion file: ${odc.exclusion.path.printable}</echo>
		<echo>[+] ODC Java home: ${odc.java.home}</echo>
		<echo>[+] Token found: ${token}</echo>
		<echo>[+] Local scanner path: ${scanner.path}</echo>
		<echo>[+] Server URL: ${sonar.url}</echo>
	</target>
		
	<target name="check.active.tasks" depends="load.params">
	    <condition property="run.odc">
	     <equals arg1="${odc.active}" arg2="true"/>
	    </condition>
	    <condition property="run.sonar">
	     <equals arg1="${sonar.active}" arg2="true"/>
	    </condition>
		
		<condition property="run.odc.printable" value='ON' else="OFF">
			<isset property="run.odc"/>
		</condition>
		
		<condition property="run.sonar.printable" value='ON' else="OFF">
			<isset property="run.sonar"/>			
		</condition>
		
		<echo>[+] OWASP Dependency Check:  ${run.odc.printable}</echo>
	    <echo>[+] SonarQube local scanner: ${run.sonar.printable}</echo>
	</target>
	
	<target name="odc.scan" if="run.odc" depends="load.params,check.active.tasks">
		<echo>[*] Running OWASP Dependency Check</echo>
		<echo>[*] Scanning ${output_folder}</echo>
		<tstamp>
			<format property="timestamp" pattern="yyyyMMdd_HHmmss"/>
		</tstamp>
		<property name="odc.report.path" value='${odc.report.out}\${project_name}_${timestamp}'/>
		<property name="odc.report.name" value='dependency-check-report'/>
		<condition property="odc.exclude" value='--suppression "${odc.exclusion.path}"' else="">
			<isset property="odc.exclusion.path"/>
		</condition>		
		<exec executable="cmd" failonerror="true" >
			<arg value="/c"/>
			<arg value='""${odc.java.home}" -classpath "${odc.scanner.home}"\plugins\*;"${odc.scanner.home}\lib"\* -Dapp.name="dependency-check" -Dapp.repo="${odc.scanner.home}\lib" -Dapp.home="${odc.scanner.home}" -Dbasedir="${odc.scanner.home}" org.owasp.dependencycheck.App -s "${output_folder}" -o "${odc.report.path}" ${odc.exclude} -f HTML -f JSON -f XML --disableAssembly"'/>
		</exec>
		<echo>[+] Scan Completed. Report can be found here: ${odc.report.path}</echo>
	</target>
	
	<target name="sonar.scan" if="run.sonar" depends="load.params,check.active.tasks">
		<echo>[*] Running SonarQube local Scanner</echo>
		<echo>[*] Prepairing groovy scripts for scan</echo>
		<property name="sonar.groovy_folder" value='sonar_scanned_groovy'/>
		<mkdir dir="${output_folder}/${sonar.groovy_folder}"/>
		<copy todir="${output_folder}/${sonar.groovy_folder}">
		    <fileset dir="${output_folder}" includes="**/*.groovy"/>
		</copy>
		<replace dir="${output_folder}/${sonar.groovy_folder}" value="//">
			<replacefilter token="#input" value="//#input"/>
			<replacefilter token="#output" value="//#output"/>
			<replacefilter token="#include" value="//#include"/>
		  <include name="**/*.groovy"/>
		</replace>
		<echo>[*] Running on path: ${output_folder} with version: ${version}</echo>
		<property name="exclusions" value="WEB-INF/**/*.groovy,**/*.java,**/*.*css,**/*jquery*/**,**/*jquery*.js,**/*bootstrap*.js,**/*bootstrap*/**,**/*.descr,wr*/**,Resources/**,WRResources/*,WRResources/ajax/**,WRResources/timepicker/**,builtin/**"/>
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value='"${scanner.path}\bin\sonar-scanner.bat" -D"sonar.sourceEncoding=UTF-8" -D"sonar.dependencyCheck.htmlReportPath=${odc.report.path}\${odc.report.name}.html" -D"sonar.dependencyCheck.jsonReportPath=${odc.report.path}\${odc.report.name}.json" -D"sonar.dependencyCheck.xmlReportPath=${odc.report.path}\${odc.report.name}.xml" -D"sonar.projectBaseDir=${output_folder}" -D"sonar.projectKey=${project.key}" -D"sonar.projectVersion=${version}" -D"sonar.host.url=${sonar.url}" -D"sonar.login=${token}" -D"sonar.sources=." -D"sonar.scm.disabled=true" -D"sonar.exclusions=${exclusions}" -D"sonar.cpd.exclusions=**/*.jsp" ${scanner.args}'/>
		</exec>	
		<echo>[*] Cleaning up temporary src folder</echo>
		<delete dir="${output_folder}/${sonar.groovy_folder}"/>
		<echo>[+] Scan completed</echo>
	</target>
	
	<target name="main" depends="odc.scan,sonar.scan">
		<echo>[+] Execution completed</echo>
	</target>
</project>